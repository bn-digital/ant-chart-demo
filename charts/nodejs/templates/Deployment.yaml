apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodejs.fullname" . }}
  labels: {{ include "nodejs.labels" . | nindent 4 }}
spec:
  replicas: {{ if not .Values.autoscaling.enabled }} 1 {{ else }} {{ .Values.autoscaling.minReplicas }} {{ end }}
  strategy:
    type: {{ if not .Values.autoscaling.enabled }} Recreate {{ else }} RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1 {{ end }}
  selector:
    matchLabels: {{ include "nodejs.selectorLabels" . | nindent 6 }}
  template:
    metadata: {{ with .Values.podAnnotations }}
      annotations: {{ toYaml . | nindent 8 }}
        app.kubernetes.io/version: {{ now | date "20060102150405" | quote }} {{ end }}
      labels: {{ include "nodejs.selectorLabels" . | nindent 8 }}
    spec: {{ with $secret := .Values.imagePullSecrets }}
      imagePullSecrets: {{ range $secret }}
        - name: {{ printf "%s-%s" $.Release.Name . | quote }} {{ end }} {{ end }} {{ if .Values.backend.persistence.enabled }}
      volumes: {{ range  .Values.backend.persistence.volumes }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ printf "%s-%s" $.Release.Name .name }} {{ end }} {{ end }}
      securityContext: {{ toYaml .Values.podSecurityContext | nindent 8 }} {{ with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }} {{ end }} {{ with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }} {{ end }} {{ with .Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }} {{ end }}
      containers:
        - name: frontend
          securityContext: {{ toYaml .Values.securityContext | nindent 12 }}
          image: {{ printf "%s/%s:%s" .Values.image.repository .Values.frontend.image ( .Values.image.tag | default .Chart.AppVersion) | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.frontend.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: {{ .Values.frontend.initialDelay }}
            httpGet:
              path: /
              port: {{ .Values.frontend.port }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.frontend.initialDelay }}
            httpGet:
              path: /
              port: {{ .Values.frontend.port }} {{ with .Values.frontend.envSecrets }}
          envFrom: {{ range $name := . }}
            - secretRef:
                name: {{ printf "%s-%s" $.Release.Name $name }} {{ end }} {{ end }}
          env: {{ with .Values.frontend.fileSecrets }} {{ range $name,$value := . }}
            - name: {{ $name }}
              value: {{  $value | quote }} {{ end }} {{ end }} {{ with .Values.frontend.env }} {{ range $name,$value := . }}
            - name: {{ $name }}
              value: {{ $value }} {{ end }} {{ end }}

          resources: {{ toYaml .Values.resources | nindent 12 }} {{ if .Values.backend.enabled }}
        - name: backend
          securityContext: {{ toYaml .Values.securityContext | nindent 12 }}
          image: {{ printf "%s/%s:%s" .Values.image.repository .Values.backend.image ( .Values.image.tag | default .Chart.AppVersion) | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.frontend.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: {{ .Values.frontend.initialDelay }}
            httpGet:
              path: {{ .Values.backend.path }}
              port: {{ .Values.backend.port }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.backend.initialDelay }}
            httpGet:
              path: {{ .Values.backend.path }}
              port: {{ .Values.backend.port }} {{ with .Values.backend.envSecrets }}
          envFrom: {{ range $name := . }}
            - secretRef:
                name: {{ printf "%s-%s" $.Release.Name $name }} {{ end }} {{ end }}
          env: {{ with .Values.backend.fileSecrets }} {{ range $name,$value := . }}
            - name: {{ $name }}
              value: {{  $value | quote }} {{ end }} {{ end }} {{ with .Values.backend.env }} {{ range $name,$value := . }}
            - name: {{ $name }}
              value: {{ $value }} {{ end }} {{ end }}
          resources: {{ toYaml .Values.resources | nindent 12 }} {{ if .Values.backend.enabled }} {{ end }} {{ end }}

